"""
Django settings for ExMyshop project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
# 因为我们把app都放到了apps,所以我们需要定义一下apps的搜索路径，使用 sys.path.insert
import sys
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# 第一个参数是搜索位置，第二个参数是使用Base_DIR和app拼成一个路径
sys.path.insert(0, os.path.join(BASE_DIR,'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'uvh7m8_m*w_ai5=fihj%%bsnj9t2n1&i(fj$&3zc0-u2y_6d-v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# 配置session中的购物车
CART_SESSION_ID = 'cart'


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'shop',
    'cart',
    'orders',
    'coupons',
]


MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 这是一个本地化的中间件， 必须在sessionMiddleWare后面，因为需要使用会话数据，必须在CommonMiddleware之前,因为后者需要
    # 一种激活了的语言来解析请求的url，
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ExMyshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 1.10版本就是这个media模块  1.9版本是django.core.context_processors.media
                'django.template.context_processors.media',
                # 自定义的一个context_processor, 处理Cart
                'cart.context_processors.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'ExMyshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'emyshop',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'
LANGUAGE = (
    ('en', 'English'),
    ('es', 'Spanish'),
)
# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

# 是否支持国际化，默认是true
USE_I18N = True
# 是否支持本地化，默认是True
USE_L10N = True

# 是否使用时区，支持全球时间,默认是True,
# USE_TZ = True
USE_TZ = False

# 添加local路径，支持信息文件,信息文件都放入这个地方
LOCAT_PATH = (
    os.path.join(BASE_DIR, 'locale'),
)
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "/apps/shop/static"),
]

# 配置图片文件上传的默认根路径，需要在setting里面加入如下配置文件，用户可以上传自己的图片
MEDIA_URL = '/media/'  # 管理用户上传的多媒体文件的主 URL
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # 图片这些文件在本地保存的路径